# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE='INFINITY'
HISTFILESIZE='ANDBEYOND'

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

###
# Set PS1 prompt
###

function git_branch {
  # Get the current Git branch
  branch=$(git branch 2>/dev/null | grep \* | awk '{print $2}')
  
  # Check if we are in a Git repository
  if [ ! -z "$branch" ]; then
    echo "$branch"
  fi
}
function output_on {
  # Get the current Git branch
  branch=$(git branch 2>/dev/null | grep \* | awk '{print $2}')
  
  # Check if we are in a Git repository
  if [ ! -z "$branch" ]; then
    echo " on "
  fi
}

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\e[1;32m\]\u@\h\[\e[0m\][\t]:\[\e[1;34m\]$(pwd)\[\e[0m\]\[\e[1;30m\]\e[0m:$(output_on)\e[1m\[\e[1;31m\]$(git_branch)\n\[\e[1;31m\]\$\[\e[0m\] '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h[\t]:$(pwd): on $(git_branch)\n\$ '
fi

###
# Alias definitions.
###

# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f $HOME/.dotfiles/bash/aliases.bash ]; then
    source $HOME/.dotfiles/bash/aliases.bash
fi


# load all of the files compatible with both shells (zsh and bash)
# everything with the *.shell ending will be sourced here
for file in $HOME/.dotfiles/**/*.shell
do
  source $file
done

###
# Autocomplete features
##

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi


###
# localrc
###

# Stash your environment variables and other machine specific setups in ~/.localrc. 
# This means they'll stay out of your main dotfiles repository (which may be public, like this one), 
# but you'll have access to them in your scripts.
if [[ -a ~/.localrc ]]
then
  source ~/.localrc
fi

####################################################################################################
############### END: Put everything that ends up beyond this point in $HOME/.localrc ###############
####################################################################################################